" knuts' .vimrc stolen from varius places
" most notably stevelosh.com
"
" Preamble ---------------------------------------------------------------- {{{

filetype off
"call pathogen#infect('~/.vim/bundle')
call pathogen#runtime_append_all_bundles()
filetype plugin indent on
set nocompatible


" }}}

" gvim-options ------------------------------------------------------------ {{{

" Maximizes the GVIM-window on start
autocmd GUIEnter * simalt ~x


" }}}
" Basic options ----------------------------------------------------------- {{{


let mapleader=","

set hidden
set encoding=utf-8
set modelines=0
set autoindent
set smartindent
set tabstop=4
set shiftwidth=4
set vb t_vb=
set list
set listchars=tab:\ \ 
set t_Co=256
" Attempt to get 256 colors whenever possible
if &term =~ "xterm"
	set t_Co=256
	if has("terminfo")
		let &t_Sf=nr2char(27).'[3%p1%dm'
		let &t_Sb=nr2char(27).'[4%p1%dm'
	else
		let &t_Sf=nr2char(27).'[3%dm'
		let &t_Sb=nr2char(27).'[4%dm'
	endif
endif
set textwidth=80
set formatoptions=qrn1
set colorcolumn=85
set gdefault "Så slipper du slenge på /g på alt
set cursorline " hilighter aktiv linje
set wildmenu " viser forslag til :kommandoer
set wildmode=list:longest
set ttyfast
set showcmd
set visualbell
set number
set pastetoggle=<F3>
if has('gui_running')
	set guioptions-=T  " no toolbar
	set guioptions-=m " Removes menu
	set guifont=Consolas
	colorscheme molokai
endif

syntax on


" vim-latex-ting
let g:tex_flavor='latex'
let g:Tex_DefaultTargetFormat='pdf'
let g:Tex_MultipleCompileFormats='dvi,pdf'
let g:Tex_ViewRule_pdf='evince &'
set backspace=indent,eol,start

set conceallevel=2 " Erstatter \Pi med unicode-tegnet i mathmode i latex bl.a.
"Prøver å gjøre conceal litt mindre stygg
hi Conceal guibg=NONE ctermbg=NONE 

filetype plugin on
colorscheme molokai

" Spelling {{{
set spelllang=nb
" }}}
" Backups {{{
" Store temporary files in a central spot
set backup
set backupdir=~/.vim-tmp//,~/.tmp//,~/tmp//,/var/tmp//,/tmp//
set directory=~/.vim-tmp//,~/.tmp//,~/tmp//,/var/tmp//,/tmp//

"set undodir=~/.vim/tmp/undo//     " undo files
"set backupdir=~/.vim/tmp/backup// " backups
"set directory=~/.vim/tmp/swap//   " swap files
"set backup                        " enable backups
set noswapfile                    " It's 2012, Vim.
" }}}


" }}}
" Searching and movement -------------------------------------------------- {{{

set ignorecase
set smartcase
set gdefault
set showmatch
set hlsearch
set incsearch
set virtualedit+=block

" Keep search matches in the middle of the window and pulse the line when moving
" to them. zv ?

nnoremap n nzz
nnoremap N Nzz

" Minimum number of lines between cursor and egde
set scrolloff=3
set sidescroll=1
set sidescrolloff=10


" }}}
" Mappings ---------------------------------------------------------------- {{{

" Directional keys -------------------------------------------------------- {{{


" Split stuff
"vertical split and move to it
nnoremap <leader>v <C-w>v<C-w>l
" Window resizing
nnoremap <left> 5<c-w>>
nnoremap <right> 5<c-w><
nnoremap <up> 5<c-w>+
nnoremap <down> 5<c-w>-
" }}}

" j og k oppfører seg som du forventer også med wrappede linjer
nnoremap j gj
nnoremap k gk
" Det er så langt bort til <ESC> hallo
inoremap jj <ESC>

" Open a Quickfix window for the last search.
nnoremap <silent> <leader>/ :execute 'vimgrep /'.@/.'/g %'<CR>:copen<CR>

" Don't move on * (Just hilight the on the cursor)
nnoremap * *<c-o>


map <F2> :NERDTreeToggle<CR>

" Fuck you, help key.
noremap  <F1> :set invfullscreen<CR>
inoremap <F1> <ESC>:SET INVFULLSCREen<CR>A

" Fuck you too, manual key.
nnoremap K <nop>

" Fjerner hilight etter at du har søkt opp div
nnoremap <leader><space> :noh<cr>

" Finner matchende parentes med tab
nnoremap <tab> %
vnoremap <tab> %

"" very magic
nnoremap / /\v
vnoremap / /\v

inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>

" tabedit vimrc
nnoremap <leader>ve :tabedit $MYVIMRC<CR>
" source vimrc
nnoremap <leader>vr :so $MYVIMRC<CR>

" ,N - toggle line numbers
function! ToggleLineNumbers() " {{{
	if &number
		set nonumber
	elseif &relativenumber
		set number
	else
		set relativenumber
	endif
endfunction 
" }}}
nnoremap <silent> ,N :call ToggleLineNumbers()<CR>

" Highlight word {{{

nnoremap <silent> <leader>hh :execute 'match InterestingWord1 /\<<c-r><c-w>\>/'<cr>
nnoremap <silent> <leader>h1 :execute 'match InterestingWord1 /\<<c-r><c-w>\>/'<cr>
nnoremap <silent> <leader>h2 :execute '2match InterestingWord2 /\<<c-r><c-w>\>/'<cr>
nnoremap <silent> <leader>h3 :execute '3match InterestingWord3 /\<<c-r><c-w>\>/'<cr>

" }}}
" Make behave ------------------------------------------------------------- {{{

" Make Y and D behave like you'd expect
map Y y$
map D d$

" Yank til clipboard
map <leader>y "*y

" Keep search matches in the middle of the window and pulse the line when moving
" to them.
nnoremap n nzzzv
nnoremap N Nzzzv

" Easier to type, and I never use the default behavior.
noremap H ^
noremap L g_

" }}}
" Window manipulation / movement ------------------------------------------ {{{


" }}}
" Buffer movement --------------------------------------------------------- {{{

" ,n - next buffer
nnoremap <silent> ,n :bnext<CR>

" ,p - previous buffer
nnoremap <silent> ,p :bprevious<CR>

" }}}


" }}}
" Folding ----------------------------------------------------------------- {{{


set foldlevelstart=0

" Make the current location sane.
nnoremap <c-cr> zvzt

" Space to toggle folds.
nnoremap <Space> za
vnoremap <Space> za

" Make zO recursively open whatever top level fold we're in, no matter where the
" cursor happens to be.
nnoremap zO zCzO

" Use ,z to "focus" the current fold.
nnoremap <leader>z zMzvzz

" }}}
" Various filetype-specific stuff ----------------------------------------- {{{
" LaTeX {{{

augroup ft_tex
	au!
	au FileType tex setlocal foldmethod=manual
augroup end

" }}}
" C {{{

augroup ft_c
    au!
    au FileType c setlocal foldmethod=manual
augroup END

" }}}
" QuickFix {{{

augroup ft_quickfix
    au!
    au Filetype qf setlocal colorcolumn=0 nolist nocursorline nowrap
augroup END

" }}}
" Vim {{{

augroup ft_vim
    au!

    au FileType vim setlocal foldmethod=marker
    au FileType help setlocal textwidth=78
    au BufWinEnter *.txt if &ft == 'help' | wincmd L | endif
augroup END

" }}}
" }}}
" Plugin settings --------------------------------------------------------- {{{
" Rainbow Parentheses {{{
nnoremap <leader>R :RainbowParenthesesToggle<cr>
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]
let g:rbpt_max = 16
" }}}
" Powerline -------------------------------------------------------------- {{{
set laststatus=2
let g:Powerline_symbols='fancy'
set fillchars+=stl:\ ,stlnc:\
" }}}
" }}}
